syntax = "proto3";

package upload;
option go_package = "internal/protos/upload";

service IotaFS {
    rpc ChunksExist(ChunksExistRequest) returns (ChunksExistResponse);
    rpc CreateFile(File) returns (FileID);
    rpc List(ListRequest) returns (ListResponse);
    rpc Head(HeadRequest) returns (HeadResponse);
    rpc Download(FileID) returns (DownloadResponse);
    rpc Copy(CopyRequest) returns (FileID);
    rpc Delete(FileID) returns (Empty);
    rpc GetChunkerParams(Empty) returns (ChunkerParams);
}

message ChunksExistRequest {
    repeated bytes sums = 1;
}

message ChunksExistResponse {
    repeated bool exists = 1;
}

message File {
    string name = 1;
    repeated bytes sums = 2;
}

message CopyRequest {
    bytes src_id = 1;
    string dst = 2;
}

message FileID {
    bytes sum = 1;
}

message RenameRequest {
    bytes src_id = 1;
    string dst = 2;
}

message Prefix {
    string prefix = 1;
}

message ListRequest {
    string prefix = 1;
    uint64 limit = 2;
    int64 next_page_token = 3;
    string exclude = 4;
    string include = 5;
    bool ascending = 6;
}

message ListResponse {
    repeated FileInfo info = 1;
    int64 next_page_token = 2;
}


message HeadRequest {
    string name = 1;
    uint64 limit = 2;
    int64 next_page_token = 3;
    bool ascending = 4;
}

message HeadResponse {
    repeated FileInfo info = 1;
    int64 next_page_token = 2;
}

message Files {
    repeated FileInfo infos = 1;
}

message FileInfo {
    string name = 1;
    int64 created_at = 2;
    uint64 size = 3;
    bytes sum = 4;
}

message Empty {}

message Filename {
    string name = 1;
}

message SectionChunk {
    uint64 sequence = 1;
    uint64 size = 2;
    bytes sum = 3;
    uint64 block_offset = 4;
}

message Section {
    repeated SectionChunk chunks = 1;
    string url = 2;
    uint64 range_start = 3;
    uint64 range_end = 4;
}

message DownloadResponse {
    repeated Section sections = 1;
}


message ChunkerParams {
    uint64 min_chunk_size = 1;
    uint64 avg_chunk_size = 2;
    uint64 max_chunk_size = 3;
    uint64 normalization = 4;
}

